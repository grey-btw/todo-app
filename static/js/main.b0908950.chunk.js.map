{"version":3,"sources":["Components/Form/Form.js","Components/TodoList/TodoList.js","Components/TodoItem/TodoItem.js","App.js","index.js"],"names":["Form","statusFilter","setstatusFilter","todos","setTodos","input","setInput","stick","useRef","btnRef","btnFilter","useEffect","handleStickToState","forEach","state","index","current","style","left","offsetLeft","width","clientWidth","window","addEventListener","className","map","act","onClick","e","event","target","indicator","key","ref","id","type","placeholder","value","onChange","preventDefault","text","completed","shortid","generate","TodoList","filteredTodo","element","todo","filter","TodoItem","handleComplete","checked","App","useState","setFilteredTodo","getValueFromLocal","filterTodo","saveToLocal","localStorage","setItem","JSON","stringify","getItem","localTodo","parse","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0908950.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport shortid from 'shortid';\r\nimport './Form.css';\r\n\r\nconst Form = ({ statusFilter, setstatusFilter, todos, setTodos, input, setInput}) => {\r\n    \r\n    const stick = useRef(null);\r\n    const btnRef = [\r\n        useRef(null),\r\n        useRef(null),\r\n        useRef(null)\r\n    ];\r\n    const btnFilter = ['All', 'Active', 'Completed'];\r\n\r\n    useEffect(() => {\r\n        handleStickToState();\r\n    }, []);\r\n    \r\n    const indicator = (event, index) => {\r\n        stick.current.style.left = event.target.offsetLeft + \"px\";\r\n        stick.current.style.width = btnRef[index].current.clientWidth + \"px\";\r\n    }\r\n\r\n    const handleChangeFilter = (val) => {\r\n        setstatusFilter(val);\r\n    }\r\n\r\n    const handleInput = (e) => { \r\n        setInput(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(input !== '') {\r\n            setTodos([...todos, {\r\n                text: input, \r\n                completed: false,\r\n                id: shortid.generate()\r\n            }])\r\n            setInput('');\r\n        }\r\n    }\r\n\r\n    const handleStickToState = () => {\r\n        btnFilter.forEach((state, index) => {\r\n            if(state === statusFilter) {\r\n                stick.current.style.left = btnRef[index].current.offsetLeft + \"px\";\r\n                stick.current.style.width = btnRef[index].current.clientWidth + \"px\";\r\n            }\r\n        })\r\n    }\r\n    \r\n    window.addEventListener(\"resize\", handleStickToState);\r\n\r\n    return(\r\n        <div className=\"form\">\r\n            <div className=\"form--filter\">\r\n                <ul>\r\n                    {\r\n                        btnFilter.map((act, index) => {\r\n                            return (\r\n                                <li onClick={(e) => { indicator(e, index); handleChangeFilter(act); }}\r\n                                    className={statusFilter === btnFilter[index] ? \"form--filter_active\" : ''}\r\n                                    key={index}\r\n                                    ref={btnRef[index]}\r\n                                >\r\n                                    {act}\r\n                                </li>\r\n                                \r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n                <div id=\"stick\" ref={stick}></div>\r\n            </div>\r\n            {\r\n                statusFilter !== \"Completed\" ? (\r\n                    <form className=\"form--input\">\r\n                        <input type=\"text\" placeholder=\"Add details\" \r\n                            value={input}\r\n                            onChange={handleInput}\r\n                        />\r\n                        <button className=\"btn\" onClick={handleSubmit}>Add</button> \r\n                    </form>  \r\n                ) : (\r\n                    <div></div>\r\n                )\r\n            }\r\n    \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport './TodoList.css';\r\nimport { TodoItem } from '../index.js';\r\n\r\nconst TodoList = ({ todos, setTodos, statusFilter, filteredTodo }) => {\r\n    const handleDeleteAll = () => {\r\n        setTodos(\r\n            todos.filter(todo => todo.completed === false)\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div className=\"todoList\">\r\n            {\r\n                filteredTodo.map((element) => {\r\n                    return (\r\n                        <TodoItem key={element.id} statusFilter={statusFilter} todo={element} todos={todos} setTodos={setTodos}/>\r\n                    )\r\n                })\r\n            }\r\n            {\r\n                statusFilter === \"Completed\" ? (\r\n                    <div className=\"todoList--btn\">\r\n                        <button className=\"btn--delete\"\r\n                            onClick={handleDeleteAll}\r\n                        >\r\n                            <span className=\"material-icons todoItem--trashIcon\">delete_outline</span>\r\n                            delete all\r\n                        </button>\r\n                    </div>\r\n                ) : (\r\n                    <div></div>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport './TodoItem.css';\r\n\r\nconst TodoItem = ({ statusFilter, todo, todos, setTodos }) => {\r\n    const handleComplete = () => {\r\n        setTodos(\r\n            todos.map(element => {\r\n                if(element.id === todo.id) {\r\n                    return {\r\n                        ...element, completed: !todo.completed\r\n                    };\r\n                }\r\n                return element;\r\n            })\r\n        )\r\n    }\r\n    const handleDelete = () => {\r\n        setTodos(\r\n            todos.filter(element => element.id !== todo.id)\r\n        )\r\n    }\r\n    return(\r\n        <div className=\"todoItem\"> \r\n            <div className=\"todoItem--left\">\r\n                {todo.completed ? (\r\n                    <input type=\"checkbox\" className=\"todoItem--checkbox\"\r\n                        onClick={handleComplete}\r\n                        checked=\"checked\"\r\n                    />\r\n                ) : (\r\n                    <input type=\"checkbox\" className=\"todoItem--checkbox\"\r\n                        onClick={handleComplete}\r\n                    />\r\n                )}\r\n\r\n                <p className={`todoItem--content ${todo.completed ? 'stroke' : ''}`}>\r\n                    {todo.text}\r\n                </p>\r\n            </div>\r\n            <div  className=\"todoItem--right\">\r\n                {statusFilter === \"Completed\" ? (\r\n                    <span className=\"material-icons todoItem--trashIcon\"\r\n                        onClick={handleDelete}\r\n                    >delete_outline</span>\r\n                ) : (\r\n                    <div></div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { useState, useEffect} from 'react';\nimport './App.css';\nimport { Form, TodoList } from './Components';\n\nfunction App() {\n  const [statusFilter, setstatusFilter] = useState('All');\n  const [input, setInput] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [filteredTodo, setFilteredTodo] = useState([]);\n\n  useEffect(() => {\n    getValueFromLocal();\n  }, [])\n\n  useEffect(() => {\n    filterTodo();\n    saveToLocal();\n  }, [statusFilter, todos])\n\n\n  const saveToLocal = () => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }\n  \n  const getValueFromLocal = () => {\n    if(localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    }\n    else {\n        let localTodo = localStorage.getItem('todos', JSON.stringify(todos));\n        setTodos(JSON.parse(localTodo));\n    }\n  }\n\n  const filterTodo = () => {\n    switch(statusFilter) {\n      case 'Completed': {\n        setFilteredTodo(todos.filter((e) => e.completed === true));\n        break;\n      }\n      case 'Active': {\n        setFilteredTodo(todos.filter((e) => e.completed === false));\n        break;\n      } \n      default:\n        setFilteredTodo(todos);\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>#todo</h1>\n      <Form \n        statusFilter={statusFilter} setstatusFilter={setstatusFilter}\n        input={input} setInput={setInput}\n        todos={todos} setTodos={setTodos}\n      />\n      <TodoList \n        statusFilter={statusFilter} todos={todos} setTodos={setTodos} filteredTodo={filteredTodo}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}